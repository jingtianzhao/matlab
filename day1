clear all;
close all;
clc; 
% creat sample
mu1=[0,2]; %均值
sigma1=[.1 0;0 .1]; %协方差
data1=mvnrnd(mu1,sigma1,50)
mu2=[2,3];
sigma1=[.1 0;0 .1];
data2=mvnrnd(mu2,sigma1,50)%
mu3=[1.5,2];
sigma1=[.1 0;0 .1];
data3=mvnrnd(mu3,sigma1,50);
plot(data1(:,1),data1(:,2),'b+')
hold on; 
plot(data2(:,1),data2(:,2),'r+'); 
hold on; 
plot(data3(:,1),data3(:,2),'g+'); 
data = [data1;data2;data3]
N=4; %聚类的数目
[m,n]=size(data);
pattern=zeros(m,n+1);%初始化数据，第n+1维为数据标签
center = zeros(N,n); %初始化聚类中心
pattern (:,1:n) = data(:,:)
%随机选取其中的N个数为聚类的中心
for x = 1:1:N
   center(x,:) = data(randi(m,1),:) ;%随机使用数据作为初始聚类中心
end
while 1
    distance = zeros(1,N);
    num = zeros(1,N); %
    new_center = zeros(N,n);
    for x = 1:1:m
        for y = 1:1:N
            distance(y) = norm(data(x,:)-center(y,:));%样本分类
        end
        [i,temp] = min(distance);
        pattern(x,n+1) = temp;
    end
    k=0;
    %计算聚类中心并判断是否迭代结束
    for y = 1:1:N
        for x = 1:1:m
            if pattern(x,n+1) == y
             new_center(y,:) = new_center(y,:)+pattern(x,1:n);
             num(y) = num(y)+1;
            end
        end
        new_center(y,:) = new_center(y,:)/num(y);
        if   norm(new_center(y,:)-center(y,:))<0.1
            k = k+1;
        end
    end
    if k == N
        break;
    else
        center = new_center;
    end
end
[m, n]=size(pattern); 
figure ; 
hold on; 

for i=1:m 
    if pattern(i,n)==1
         plot(pattern(i,1),pattern(i,2),'r*'); 
         plot(center(1,1),center(1,2),'ko'); 
    elseif pattern(i,n)==2 
         plot(pattern(i,1),pattern(i,2),'g*'); 
         plot(center(2,1),center(2,2),'ko'); 
    elseif pattern(i,n)==3 
         plot(pattern(i,1),pattern(i,2),'b*'); 
         plot(center(3,1),center(3,2),'ko'); 
    elseif pattern(i,n)==4 
         plot(pattern(i,1),pattern(i,2),'y*'); 
         plot(center(4,1),center(4,2),'ko'); 
    else 
         plot(pattern(i,1),pattern(i,2),'m*'); 
         plot(center(4,1),center(4,2),'ko'); 
    end 
end 
grid on;  
